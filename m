Return-Path: <stable+bounces-106831-lists+stable=lfdr.de@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id DADE9A02405
	for <lists+stable@lfdr.de>; Mon,  6 Jan 2025 12:13:00 +0100 (CET)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 676D13A46B8
	for <lists+stable@lfdr.de>; Mon,  6 Jan 2025 11:12:55 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 18CA01DB95E;
	Mon,  6 Jan 2025 11:12:57 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="CulvJm0v"
X-Original-To: stable@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C9DD52CA8
	for <stable@vger.kernel.org>; Mon,  6 Jan 2025 11:12:56 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1736161976; cv=none; b=RJXFPrF2CH3hc5qDzdp0eEEdoGgecGM72Sdj+nTztB/WPafBtbc4Hk3u4ZSvhTwmg4QiJ6kqqrX06Vy3djJNdXi9g/B9mbIptA2ga4Zm1g/vsAo4HrOEpFBYiPkfhFIUsM6RkYdYp6Z4FboOOLM2WTpFs547eF9AematdSY7Lu4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1736161976; c=relaxed/simple;
	bh=f//ePYewEo6KUIJT7r9xdenXGO7+0Zhd9RhZAsOww8w=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=hsBujp9Ydodf/PKGJt0cPi5AMb5tst1SK5/gyqyB4xLyKb19l29NY0naLjwfhlVO2MJk9QghD18wvYVqF5CWVSCkdh3zyY5N9Yo8EBn16XOBYiJLQuRgqBeKC4Chh3NsNGl0MNap6UOk/1r3Bh+tkRVUkK4ssfl2Qf1EkrQEI98=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=CulvJm0v; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 36CD7C4CED2;
	Mon,  6 Jan 2025 11:12:56 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1736161976;
	bh=f//ePYewEo6KUIJT7r9xdenXGO7+0Zhd9RhZAsOww8w=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=CulvJm0vRpKKcfnb/CxBgrC4q0kDVl6jLj+GAF/84BRZXQZ2QwohPAUlLMNefjafu
	 IA2ZiRpnvUJINBu3L8Vd/S4VvlfldlN0oKoSt5AxE5MU/GR2piE7ga1ywAuxx7a6M4
	 oIsH06+7hhMx/MZFnWFJ65jynnWpT6tyQftHKDukOhs0YwKS+e1AvRHS+fOJjHmVMq
	 TsMHy7dHIh/4stY1BR+KFiEZ+TTXM46Rush0MLuZByGNMd2nI1vvRCRNZ9S6+N/UST
	 PsFaJvlMZSBb162EI+wqy5W16/wjbouYktui9oFGpzb/VViCTguMTxy75uWUnPKtbg
	 nHCHPglS4WvyA==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1tUl2T-009NlL-Ta;
	Mon, 06 Jan 2025 11:12:54 +0000
Date: Mon, 06 Jan 2025 11:12:53 +0000
Message-ID: <868qrop556.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Mark Rutland <mark.rutland@arm.com>
Cc: linux-arm-kernel@lists.infradead.org,
	Catalin Marinas <catalin.marinas@arm.com>,
	Will Deacon <will@kernel.org>,
	Mark Brown <broonie@kernel.org>,
	stable@vger.kernel.org
Subject: Re: [PATCH v2] arm64: Filter out SVE hwcaps when FEAT_SVE isn't implemented
In-Reply-To: <Z3ulKMeKQcHFErgr@J2N7QTR9R3>
References: <20250103182255.1763739-1-maz@kernel.org>
	<Z3ulKMeKQcHFErgr@J2N7QTR9R3>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: stable@vger.kernel.org
List-Id: <stable.vger.kernel.org>
List-Subscribe: <mailto:stable+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:stable+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: mark.rutland@arm.com, linux-arm-kernel@lists.infradead.org, catalin.marinas@arm.com, will@kernel.org, broonie@kernel.org, stable@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Mon, 06 Jan 2025 09:40:56 +0000,
Mark Rutland <mark.rutland@arm.com> wrote:
> 
> On Fri, Jan 03, 2025 at 06:22:55PM +0000, Marc Zyngier wrote:
> > The hwcaps code that exposes SVE features to userspace only
> > considers ID_AA64ZFR0_EL1, while this is only valid when
> > ID_AA64PFR0_EL1.SVE advertises that SVE is actually supported.
> > 
> > The expectations are that when ID_AA64PFR0_EL1.SVE is 0, the
> > ID_AA64ZFR0_EL1 register is also 0. So far, so good.
> > 
> > Things become a bit more interesting if the HW implements SME.
> > In this case, a few ID_AA64ZFR0_EL1 fields indicate *SME*
> > features. And these fields overlap with their SVE interpretations.
> > But the architecture says that the SME and SVE feature sets must
> > match, so we're still hunky-dory.
> > 
> > This goes wrong if the HW implements SME, but not SVE. In this
> > case, we end-up advertising some SVE features to userspace, even
> > if the HW has none. That's because we never consider whether SVE
> > is actually implemented. Oh well.
> 
> Ugh; this is a massive pain. :(
> 
> Was this found by inspection, or is some real software going wrong?

Catalin can comment on that -- I understand that he found existing SW
latching on SVE2 being wrongly advertised as hwcaps.

> > Fix it by restricting all SVE capabilities to ID_AA64PFR0_EL1.SVE
> > being non-zero.
> 
> Unfortunately, I'm not sure this fix is correct+complete.
> 
> We expose ID_AA64PFR0_EL1 and ID_AA64ZFR0_EL1 via ID register emulation,
> so any userspace software reading ID_AA64ZFR0_EL1 will encounter the
> same surprise. If we hide that I'm worried we might hide some SME-only
> information that isn't exposed elsewhere, and I'm not sure we can
> reasonably hide ID_AA64ZFR0_EL1 emulation for SME-only (more on that
> below).

I don't understand where things go wrong. EL0 SW that looks at the ID
registers should perform similar checks, and we are not trying to make
things better on that front (we can't). Unless you invent time travel
and fix the architecture 5 years ago... :-/

The hwcaps are effectively demultiplexing the ID registers, and they
have to be exact, which is what this patch provides (SVE2 doesn't get
wrongly advertised when not present).

> Secondly, all our HWCAP documentation is written in the form:
> 
> | HWCAP2_SVEBF16
> |     Functionality implied by ID_AA64ZFR0_EL1.BF16 == 0b0001.
> 
> ... so while the architectural behaviour is a surprise, the kernel is
> (techincallyy) behaving exactly as documented prior to this patch. Maybe
> we need to change that documentation?

Again, I don't see what goes wrong here. BF16 is only implemented for
SVE or SME+FA64, and FA64 requires SVE2. So at least for that one, we
should be good.

>
> Do we have equivalent SME hwcaps for the relevant features?
>
> ... looking at:
> 
>   https://developer.arm.com/documentation/ddi0601/2024-12/AArch64-Registers/ID-AA64ZFR0-EL1--SVE-Feature-ID-Register-0?lang=en
> 
> ... I see that ID_AA64ZFR0_EL1.B16B16 >= 0b0010 implies the presence of
> SME BFMUL and BFSCALE instructions, but I don't see something equivalent
> in ID_AA64SMFR0_EL1 per:
> 
>   https://developer.arm.com/documentation/ddi0601/2024-12/AArch64-Registers/ID-AA64SMFR0-EL1--SME-Feature-ID-Register-0?lang=en
> 
> ... so I suspect ID_AA64ZFR0_EL1 might be the only source of truth for
> this.

Indeed, and the SME HWCAPs are not doing the right thing either. Or
rather, we have no way to tell userspace that BFMUL/BFSCALE are
available.

> It is bizarre that ID_AA64SMFR0_EL1 doesn't follow the same format, and
> ID_AA64SMFR0_EL1.B16B16 is a single-bit field that cannot encode the
> same values as ID_AA64ZFR0_EL1.B16B16 (which is a 4-bit field).

*everything* about SME is bizarre.

> Even if we change Linux here, someone will need to chase up with the
> architects to ensure this isn't made worse in future.

Good luck!

	M.

-- 
Without deviation from the norm, progress is not possible.

