Return-Path: <stable+bounces-93002-lists+stable=lfdr.de@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from sy.mirrors.kernel.org (sy.mirrors.kernel.org [IPv6:2604:1380:40f1:3f00::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 63E189C89D1
	for <lists+stable@lfdr.de>; Thu, 14 Nov 2024 13:23:24 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sy.mirrors.kernel.org (Postfix) with ESMTPS id 4BA71B2C666
	for <lists+stable@lfdr.de>; Thu, 14 Nov 2024 12:20:05 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id BF2661A76C0;
	Thu, 14 Nov 2024 12:20:03 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="j4ArCBT+"
X-Original-To: stable@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7ED221F77B8
	for <stable@vger.kernel.org>; Thu, 14 Nov 2024 12:20:03 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1731586803; cv=none; b=nHsgH8+xStUcjsVQKW1tmruiI1gLvtVd/Ygt9AJsP5UIbWHBiNli6e0z9sDY04350PjfV/VYoh5BSUmw5ZRjgmAWHeRTcpqr31uehVVaNxMoRDN3AlM00VE+UEIOfT+AjNJZprNNffs47JO73K1ahsuccBmHJNYwXI1wI8BflG0=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1731586803; c=relaxed/simple;
	bh=skzLVMHdoTVMq1rRVNAGwA76Yz/44PHQtepBhSwzG/M=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=N9bMSSCwcN1etIi61I/SR2UnYD0m0egs7XFfU4aSuhqLX+9LVrVngojJ2ZqyLckKjrI0ZXC1npMofJ8/GwHam4n7ScjmZdy/daq1X7qi6VCPav285dIr8A/0z20+9jiQodbpyDte42Co/qcuq+FpaPH/yk2eHsn+wG8Koh2cJI4=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=j4ArCBT+; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 12A14C4CECD;
	Thu, 14 Nov 2024 12:20:03 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1731586803;
	bh=skzLVMHdoTVMq1rRVNAGwA76Yz/44PHQtepBhSwzG/M=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=j4ArCBT+J/X8wXs3qbr4qXXKp4GO1sTx9L/DS+joqt4u/6ZMtGI81OCWi/LYXSDfP
	 /M7lYkGiUl6g3ujRYmte0f7t25TfIVp0K19Q4MjnZh188vJmSioupqsvRdfkhQVkaW
	 jcyqWAfr+LCVzwa1dUZk9s1M4clVS8H5RExsNWKFaj1kSK/B8QI7dYVvGtHim+fm7u
	 LuZiviJFsk+Q8OEn1srwksJ7Qpas1ztLFnvHlYnBJYnxWbtv3yW6f64H+lVOhVm1Nw
	 K2f0fXR4p3NKEN72nUMEx8cGqnRjeTjl3BMOejvAe35Rk5QWnTaHMcDPWVqlxCTgDs
	 0JbXkQSsEAckQ==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1tBYpM-00CpOx-Oq;
	Thu, 14 Nov 2024 12:20:00 +0000
Date: Thu, 14 Nov 2024 12:20:00 +0000
Message-ID: <865xoqvwgf.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Will Deacon <will@kernel.org>
Cc: catalin.marinas@arm.com,
	linux-arm-kernel@lists.infradead.org,
	Mark Rutland <mark.rutland@arm.com>,
	stable@vger.kernel.org
Subject: Re: [PATCH] arm64: tls: Fix context-switching of tpidrro_el0 when kpti is enabled
In-Reply-To: <20241114095332.23391-1-will@kernel.org>
References: <20241114095332.23391-1-will@kernel.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: stable@vger.kernel.org
List-Id: <stable.vger.kernel.org>
List-Subscribe: <mailto:stable+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:stable+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: will@kernel.org, catalin.marinas@arm.com, linux-arm-kernel@lists.infradead.org, mark.rutland@arm.com, stable@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Thu, 14 Nov 2024 09:53:32 +0000,
Will Deacon <will@kernel.org> wrote:
> 
> Commit 18011eac28c7 ("arm64: tls: Avoid unconditional zeroing of
> tpidrro_el0 for native tasks") tried to optimise the context switching
> of tpidrro_el0 by eliding the clearing of the register when switching
> to a native task with kpti enabled, on the erroneous assumption that
> the kpti trampoline entry code would already have taken care of the
> write.
> 
> Although the kpti trampoline does zero the register on entry from a
> native task, the check in tls_thread_switch() is on the *next* task and
> so we can end up leaving a stale, non-zero value in the register if the
> previous task was 32-bit.
> 
> Drop the broken optimisation and zero tpidrro_el0 unconditionally when
> switching to a native 64-bit task.
> 
> Cc: Mark Rutland <mark.rutland@arm.com>
> Cc: <stable@vger.kernel.org>
> Fixes: 18011eac28c7 ("arm64: tls: Avoid unconditional zeroing of tpidrro_el0 for native tasks")
> Signed-off-by: Will Deacon <will@kernel.org>
> ---
> 
> You fix one side-channel and introduce another... :(
>
>  arch/arm64/kernel/process.c | 2 +-
>  1 file changed, 1 insertion(+), 1 deletion(-)
> 
> diff --git a/arch/arm64/kernel/process.c b/arch/arm64/kernel/process.c
> index 3e7c8c8195c3..2bbcbb11d844 100644
> --- a/arch/arm64/kernel/process.c
> +++ b/arch/arm64/kernel/process.c
> @@ -442,7 +442,7 @@ static void tls_thread_switch(struct task_struct *next)
>  
>  	if (is_compat_thread(task_thread_info(next)))
>  		write_sysreg(next->thread.uw.tp_value, tpidrro_el0);
> -	else if (!arm64_kernel_unmapped_at_el0())
> +	else
>  		write_sysreg(0, tpidrro_el0);
>  
>  	write_sysreg(*task_user_tls(next), tpidr_el0);

Acked-by: Marc Zyngier <maz@kernel.org>

	M.

-- 
Without deviation from the norm, progress is not possible.

