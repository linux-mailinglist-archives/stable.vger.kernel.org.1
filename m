Return-Path: <stable+bounces-95909-lists+stable=lfdr.de@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id 465559DF702
	for <lists+stable@lfdr.de>; Sun,  1 Dec 2024 20:49:53 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id E0F202815EB
	for <lists+stable@lfdr.de>; Sun,  1 Dec 2024 19:49:51 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 211BE1D7E26;
	Sun,  1 Dec 2024 19:49:48 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="b449ZUji"
X-Original-To: stable@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CA54541C64;
	Sun,  1 Dec 2024 19:49:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1733082587; cv=none; b=OfbxzUVD/gIJ+pemtnE/4TNLez7YCVSjSDrHtOUqwGbhWZ/MeMO/SUlflgH4NMLrYyxazXPXVt/KazNdRFLDbW2eZthA+nweEuO913Fmkvuojj5EgThPyXJlWATgnWuX4eVOLlSWZ9aU0EfgA0w7CbU1Bebg8kgRqhVe9zByiUQ=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1733082587; c=relaxed/simple;
	bh=vUtqPxz5MaSnBJg2Nyf2KgaiX3f+2NOOKwsOjTqR/gQ=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=meR3eIDMmWSGvkXtw1GZ/cgT5LZPC7QN6F0oUJqQfy790RimU4q1CJ/PpE+dMDgxyt72U5iwwYt4YLVluTcqxcpyAjO6JALRPm+EEMVxNg/5V0tfcOcTUsYX8xBgKtC3UsIxGO1Dg8xMRS4tBgEGRwZuqFKoAd6V7NPPTe5CtBI=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=b449ZUji; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 30426C4CECF;
	Sun,  1 Dec 2024 19:49:47 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1733082587;
	bh=vUtqPxz5MaSnBJg2Nyf2KgaiX3f+2NOOKwsOjTqR/gQ=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=b449ZUji2aDtfbybQR5pTge9+EUghDgV4Te/PCjgzZ9oemmPgPl6b8VXX8f10tnDT
	 ekQJL+tzThLvoNNAd29oE2IITGdD+x72kSeHZz/vnH/3JM5jqQCffXPPMQm7rp1Y6S
	 9B32vi1ffXlSIkVrxZG88m4LLHm5D+sqV2BpZIw06nz+mC8ljkD9xQTubaqb3s1z+C
	 4eR6DCbKgbQ6Iaqf/42T5ZyqHquDAbZ3aQCP3Xn3bOCyXlATG2mMepirgEun23490w
	 hXvhI3W7nQcgsH97jCmsViZr5MmB4K3Ag99s9uFqAu4nMWihktziExzj+W/yp0lKsV
	 pi4Gtp0/8uBuQ==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1tHpwu-00H96x-So;
	Sun, 01 Dec 2024 19:49:44 +0000
Date: Sun, 01 Dec 2024 19:49:44 +0000
Message-ID: <86zflftc87.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Mike Rapoport <rppt@kernel.org>
Cc: linux-kernel@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org,
	Catalin Marinas <catalin.marinas@arm.com>,
	Will Deacon <will@kernel.org>,
	Zi Yan <ziy@nvidia.com>,
	Dan Williams <dan.j.williams@intel.com>,
	David Hildenbrand <david@redhat.com>,
	Andrew Morton <akpm@linux-foundation.org>,
	stable@vger.kernel.org
Subject: Re: [PATCH v2] arch_numa: Restore nid checks before registering a memblock with a node
In-Reply-To: <Z0y5xsGgtJrSkyBe@kernel.org>
References: <20241201092702.3792845-1-maz@kernel.org>
	<Z0y5xsGgtJrSkyBe@kernel.org>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: stable@vger.kernel.org
List-Id: <stable.vger.kernel.org>
List-Subscribe: <mailto:stable+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:stable+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: rppt@kernel.org, linux-kernel@vger.kernel.org, linux-arm-kernel@lists.infradead.org, catalin.marinas@arm.com, will@kernel.org, ziy@nvidia.com, dan.j.williams@intel.com, david@redhat.com, akpm@linux-foundation.org, stable@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

Hi Mike,

On Sun, 01 Dec 2024 19:32:22 +0000,
Mike Rapoport <rppt@kernel.org> wrote:
> 
> Hi Marc,
> 
> On Sun, Dec 01, 2024 at 09:27:02AM +0000, Marc Zyngier wrote:
> > Commit 767507654c22 ("arch_numa: switch over to numa_memblks")
> > significantly cleaned up the NUMA registration code, but also
> > dropped a significant check that was refusing to accept to
> > configure a memblock with an invalid nid.
> 
> ... 
>  
> > while previous kernel versions were able to recognise how brain-damaged
> > the machine is, and only build a fake node.
> > 
> > Use the memblock_validate_numa_coverage() helper to restore some sanity
> > and a "working" system.
> > 
> > Fixes: 767507654c22 ("arch_numa: switch over to numa_memblks")
> > Suggested-by: Mike Rapoport <rppt@kernel.org>
> > Signed-off-by: Marc Zyngier <maz@kernel.org>
> > Cc: Catalin Marinas <catalin.marinas@arm.com>
> > Cc: Will Deacon <will@kernel.org>
> > Cc: Zi Yan <ziy@nvidia.com>
> > Cc: Dan Williams <dan.j.williams@intel.com>
> > Cc: David Hildenbrand <david@redhat.com>
> > Cc: Andrew Morton <akpm@linux-foundation.org>
> > Cc: stable@vger.kernel.org
> > ---
> >  drivers/base/arch_numa.c | 4 ++++
> >  1 file changed, 4 insertions(+)
> > 
> > diff --git a/drivers/base/arch_numa.c b/drivers/base/arch_numa.c
> > index e187016764265..c63a72a1fed64 100644
> > --- a/drivers/base/arch_numa.c
> > +++ b/drivers/base/arch_numa.c
> > @@ -208,6 +208,10 @@ static int __init numa_register_nodes(void)
> >  {
> >  	int nid;
> >  
> > +	/* Check the validity of the memblock/node mapping */
> > +	if (!memblock_validate_numa_coverage(1))
> 
> I've changed this to memblock_validate_numa_coverage(0) and applied along
> with my patch that changed memblock_validate_numa_coverage() to work with
> 0:
> 
> https://git.kernel.org/pub/scm/linux/kernel/git/rppt/memblock.git/log/?h=thunderx-fix
> 
> Can you please verify that it works on your "quality hardware"?

Commit 427c6179e159b in your tree still has memblock_validate_numa_coverage(1).
Forgot to push out the updated version?

Flipping this to 0 locally, I have verified that this still allows the
old thing to trudge along:

root@duodenum:~# uname -a
Linux duodenum 6.12.0-12115-g427c6179e159-dirty #3896 SMP PREEMPT Sun Dec  1 19:43:13 GMT 2024 aarch64

Thanks again,

	M.

-- 
Without deviation from the norm, progress is not possible.

