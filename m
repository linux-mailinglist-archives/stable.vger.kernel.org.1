Return-Path: <stable+bounces-166036-lists+stable=lfdr.de@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from am.mirrors.kernel.org (am.mirrors.kernel.org [IPv6:2604:1380:4601:e00::3])
	by mail.lfdr.de (Postfix) with ESMTPS id EFFEBB19757
	for <lists+stable@lfdr.de>; Mon,  4 Aug 2025 02:27:09 +0200 (CEST)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by am.mirrors.kernel.org (Postfix) with ESMTPS id 2650018951E6
	for <lists+stable@lfdr.de>; Mon,  4 Aug 2025 00:27:25 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 8956D191F6A;
	Mon,  4 Aug 2025 00:26:52 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="KfjIH5p9"
X-Original-To: stable@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 453B429A2;
	Mon,  4 Aug 2025 00:26:52 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1754267212; cv=none; b=XCv0QFxq+6LyH1ejnylFyEo0PlZ4sP1m1bLKNy05GYPjmWxcj2COQ+sSGAWv/3zEXuOgE4OKETR/f7UGD4H+t5wKSNNIcae2667kfc8U7+1h45GBy5qqv4ZoW0fWGHNDXwP4GjdO/DMxZgXmBXs6AH369zTXLn9wOr+Z1f421Ik=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1754267212; c=relaxed/simple;
	bh=SlFiCbJqCwwiH8zN6swVJIeIFnzwPa4ZhinIix2iI9w=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=Q4O2VNqqEuncjHHoq5we07j1jriIM413S/CcqrDA71Y3SS6thuRwWF0Wpp7787zMLBWK2FyxbACEuwovwuRA9LtAneWNBnsSDzu9Q45q1vHGuFtlArJr0idUSUcRBPL+QPQfuw9FnyUt0lG0gRjFMVaEP41c50sagJ5SwfmB7u0=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=KfjIH5p9; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id CC64EC4CEEB;
	Mon,  4 Aug 2025 00:26:50 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1754267212;
	bh=SlFiCbJqCwwiH8zN6swVJIeIFnzwPa4ZhinIix2iI9w=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=KfjIH5p9WruDGI9eATBRxd4qrMui8LtwxVJY3yde2qNiItuw75xwsW+w8GEw6Zco2
	 dgpTfLoZZ/WvtIbN5ElTtqkqhRgE97lxHJkQsog6BwgtqAu5yq9nDN+787WcMIE+DS
	 2/h2uvJW980EJ79jKey2YrbAoB17A62qEK6RTsEq2GiIsbhFpUkl+liJ3+Qr8Zr2pz
	 rJiE+4ZaEMJXvRXoN/iNgaHLmqMmi+7QRkeZ2b03eLL6EnxIM/y0hysXLD2g8IAcSM
	 +vTdoP7Gu+FEc1Jur7LbiwbW9ps+xfLfZjWZ+CNEA5LDms6weP2pTe1dbmVsGiFzzH
	 wCZWXbjdHGAqA==
From: Sasha Levin <sashal@kernel.org>
To: patches@lists.linux.dev,
	stable@vger.kernel.org
Cc: Mark Brown <broonie@kernel.org>,
	Sasha Levin <sashal@kernel.org>,
	tiwai@suse.de,
	ckeepax@opensource.cirrus.com,
	kuninori.morimoto.gx@renesas.com,
	raag.jadav@intel.com
Subject: [PATCH AUTOSEL 6.16 65/85] ASoC: hdac_hdmi: Rate limit logging on connection and disconnection
Date: Sun,  3 Aug 2025 20:23:14 -0400
Message-Id: <20250804002335.3613254-65-sashal@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20250804002335.3613254-1-sashal@kernel.org>
References: <20250804002335.3613254-1-sashal@kernel.org>
Precedence: bulk
X-Mailing-List: stable@vger.kernel.org
List-Id: <stable.vger.kernel.org>
List-Subscribe: <mailto:stable+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:stable+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-stable: review
X-Patchwork-Hint: Ignore
X-stable-base: Linux 6.16
Content-Transfer-Encoding: 8bit

From: Mark Brown <broonie@kernel.org>

[ Upstream commit c4ca928a6db1593802cd945f075a7e21dd0430c1 ]

We currently log parse failures for ELD data and some disconnection events
as errors without rate limiting. These log messages can be triggered very
frequently in some situations, especially ELD parsing when there is nothing
connected to a HDMI port which will generate:

hdmi-audio-codec hdmi-audio-codec.1.auto: HDMI: Unknown ELD version 0

While there's doubtless work that could be done on reducing the number of
connection notification callbacks it's possible these may be legitimately
generated by poor quality physical connections so let's use rate limiting
to mitigate the log spam for the parse errors and lower the severity for
disconnect logging to debug level.

Signed-off-by: Mark Brown <broonie@kernel.org>
Link: https://patch.msgid.link/20250613-asoc-hdmi-eld-logging-v1-1-76d64154d969@kernel.org
Signed-off-by: Mark Brown <broonie@kernel.org>
Signed-off-by: Sasha Levin <sashal@kernel.org>
---

LLM Generated explanations, may be completely bogus:

**Backport Status: YES**

This commit is a good candidate for backporting to stable kernel trees
for the following reasons:

1. **Fixes a real user-facing bug**: The commit addresses log spam
   issues that can fill system logs with repeated error messages. When
   no HDMI display is connected, the driver continuously logs "HDMI:
   Unknown ELD version 0" errors, which can consume disk space and make
   logs difficult to analyze.

2. **Small and contained fix**: The changes are minimal and focused:
   - Changes `dev_err()` to `dev_err_ratelimited()` in two locations
     within `hdac_hdmi_parse_eld()` (lines 1233-1234 and 1242-1243)
   - Changes `dev_err()` to `dev_dbg()` for disconnect messages in
     `hdac_hdmi_present_sense()` (lines 1302-1303)
   - Total of just 3 logging statement modifications

3. **No functional changes**: The commit only modifies logging behavior
   without changing any driver logic, state management, or hardware
   interaction. This minimizes regression risk.

4. **Affects a common use case**: The issue occurs when HDMI ports are
   unconnected, which is a normal operating condition for many systems.
   Users may have HDMI ports they never use, or may frequently
   plug/unplug monitors.

5. **No architectural changes**: The fix doesn't introduce new features
   or modify the driver's architecture. It simply rate-limits existing
   error messages and downgrades one message's severity.

6. **Clear problem and solution**: The commit message clearly describes
   the issue (log spam from ELD parsing failures) and the
   straightforward solution (rate limiting and severity adjustment).

The specific code changes show:
- In `hdac_hdmi_parse_eld()`: Rate-limiting prevents flooding logs when
  ELD data is invalid/unavailable
- In `hdac_hdmi_present_sense()`: Downgrading disconnect messages from
  error to debug level is appropriate since disconnection is a normal
  event, not an error condition

This meets the stable kernel criteria of being a simple fix for an
annoying bug that affects users without introducing new risks.

 sound/soc/codecs/hdac_hdmi.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/sound/soc/codecs/hdac_hdmi.c b/sound/soc/codecs/hdac_hdmi.c
index 1139a2754ca3..056d98154682 100644
--- a/sound/soc/codecs/hdac_hdmi.c
+++ b/sound/soc/codecs/hdac_hdmi.c
@@ -1232,7 +1232,8 @@ static int hdac_hdmi_parse_eld(struct hdac_device *hdev,
 						>> DRM_ELD_VER_SHIFT;
 
 	if (ver != ELD_VER_CEA_861D && ver != ELD_VER_PARTIAL) {
-		dev_err(&hdev->dev, "HDMI: Unknown ELD version %d\n", ver);
+		dev_err_ratelimited(&hdev->dev,
+				    "HDMI: Unknown ELD version %d\n", ver);
 		return -EINVAL;
 	}
 
@@ -1240,7 +1241,8 @@ static int hdac_hdmi_parse_eld(struct hdac_device *hdev,
 		DRM_ELD_MNL_MASK) >> DRM_ELD_MNL_SHIFT;
 
 	if (mnl > ELD_MAX_MNL) {
-		dev_err(&hdev->dev, "HDMI: MNL Invalid %d\n", mnl);
+		dev_err_ratelimited(&hdev->dev,
+				    "HDMI: MNL Invalid %d\n", mnl);
 		return -EINVAL;
 	}
 
@@ -1299,8 +1301,8 @@ static void hdac_hdmi_present_sense(struct hdac_hdmi_pin *pin,
 
 	if (!port->eld.monitor_present || !port->eld.eld_valid) {
 
-		dev_err(&hdev->dev, "%s: disconnect for pin:port %d:%d\n",
-						__func__, pin->nid, port->id);
+		dev_dbg(&hdev->dev, "%s: disconnect for pin:port %d:%d\n",
+			__func__, pin->nid, port->id);
 
 		/*
 		 * PCMs are not registered during device probe, so don't
-- 
2.39.5


