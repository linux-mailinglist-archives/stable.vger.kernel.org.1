Return-Path: <stable+bounces-106837-lists+stable=lfdr.de@vger.kernel.org>
X-Original-To: lists+stable@lfdr.de
Delivered-To: lists+stable@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [IPv6:2604:1380:45e3:2400::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 13399A0252E
	for <lists+stable@lfdr.de>; Mon,  6 Jan 2025 13:21:27 +0100 (CET)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 9B1623A263F
	for <lists+stable@lfdr.de>; Mon,  6 Jan 2025 12:21:21 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 72FA81DB362;
	Mon,  6 Jan 2025 12:21:22 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="EwMLmJMA"
X-Original-To: stable@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 33B1D12E4A
	for <stable@vger.kernel.org>; Mon,  6 Jan 2025 12:21:21 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1736166082; cv=none; b=n+W4UO13jt0A48Q+cVHnOG8tF4IUqe36r7eSLcraBLZywXXWvEnsnmu0ZCIsek4Yh3tbHy7U73i5kXLDAi53yNV8MVqRSoJJ+rfYGJhLSVnd7MUTPPfk3Q1iMnIPCoeCoQvBRLGP3WeDTo5Eu7sIKfCCuuvR8O3uoRlMgIjcdFs=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1736166082; c=relaxed/simple;
	bh=SsSu1bU8yVRhTN4/R4t8TeAnvWJwycFZGahCtkC0OGU=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=KYTZkq12oivRC/S9FGgU/mv0lpGtBXNHuF5MM1Btl1Pbp5A/QWme+68xMtuVcuNUT3aNkUQxnmFae2ARdRIGrhxf4lGmwgOm8somXmF7dZ5f8k88jJ/5cKcs0QM2W6jTqNxxkAlskpxQRr78Ih26MQl2ji5CEaO7d6EuGh7S/ck=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=EwMLmJMA; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id B7786C4CEDD;
	Mon,  6 Jan 2025 12:21:21 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1736166081;
	bh=SsSu1bU8yVRhTN4/R4t8TeAnvWJwycFZGahCtkC0OGU=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=EwMLmJMASu69qXLn8mxRuRGiOpP60zW6NoQCkM5eOJQHNJVxLhi/duHJpq6pf8ByR
	 lEjkzhaOUgWcudPjnmgtbEm3w+6JxjFWOBRK8CTq1EQx5SAJBNsXUmgzI5y/G+DfrX
	 w8Y5y1K8TTalBcKQxdXHNvdQtTDVTfNAk8M48pU7SB6eUrYYZKmPsDoFkYzUE6b70j
	 /As14FkcgHLgZy3qP8NeqfZ0EzucV8bljrj9U212qaks8aE6Tjs0sFOoHukhFnkrHc
	 t0hXlun9X3OWeUKg3nxplz68eNO715bOj7oYfASY2xtFpWTXC4esUuInqKDKpN44bc
	 iR9+x2PK/4y8Q==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1tUm6h-009OvS-Jz;
	Mon, 06 Jan 2025 12:21:19 +0000
Date: Mon, 06 Jan 2025 12:21:19 +0000
Message-ID: <867c78p1z4.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Mark Rutland <mark.rutland@arm.com>
Cc: linux-arm-kernel@lists.infradead.org,
	Catalin Marinas <catalin.marinas@arm.com>,
	Will Deacon <will@kernel.org>,
	Mark Brown <broonie@kernel.org>,
	stable@vger.kernel.org
Subject: Re: [PATCH v2] arm64: Filter out SVE hwcaps when FEAT_SVE isn't implemented
In-Reply-To: <Z3vGeFUBd9YSIgg_@J2N7QTR9R3>
References: <20250103182255.1763739-1-maz@kernel.org>
	<Z3ulKMeKQcHFErgr@J2N7QTR9R3>
	<868qrop556.wl-maz@kernel.org>
	<Z3vGeFUBd9YSIgg_@J2N7QTR9R3>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: stable@vger.kernel.org
List-Id: <stable.vger.kernel.org>
List-Subscribe: <mailto:stable+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:stable+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: mark.rutland@arm.com, linux-arm-kernel@lists.infradead.org, catalin.marinas@arm.com, will@kernel.org, broonie@kernel.org, stable@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Mon, 06 Jan 2025 12:03:44 +0000,
Mark Rutland <mark.rutland@arm.com> wrote:
> 
> On Mon, Jan 06, 2025 at 11:12:53AM +0000, Marc Zyngier wrote:
> > On Mon, 06 Jan 2025 09:40:56 +0000,
> > Mark Rutland <mark.rutland@arm.com> wrote:
> > > 
> > > On Fri, Jan 03, 2025 at 06:22:55PM +0000, Marc Zyngier wrote:
> > > > The hwcaps code that exposes SVE features to userspace only
> > > > considers ID_AA64ZFR0_EL1, while this is only valid when
> > > > ID_AA64PFR0_EL1.SVE advertises that SVE is actually supported.
> > > > 
> > > > The expectations are that when ID_AA64PFR0_EL1.SVE is 0, the
> > > > ID_AA64ZFR0_EL1 register is also 0. So far, so good.
> > > > 
> > > > Things become a bit more interesting if the HW implements SME.
> > > > In this case, a few ID_AA64ZFR0_EL1 fields indicate *SME*
> > > > features. And these fields overlap with their SVE interpretations.
> > > > But the architecture says that the SME and SVE feature sets must
> > > > match, so we're still hunky-dory.
> > > > 
> > > > This goes wrong if the HW implements SME, but not SVE. In this
> > > > case, we end-up advertising some SVE features to userspace, even
> > > > if the HW has none. That's because we never consider whether SVE
> > > > is actually implemented. Oh well.
> > > 
> > > Ugh; this is a massive pain. :(
> > > 
> > > Was this found by inspection, or is some real software going wrong?
> > 
> > Catalin can comment on that -- I understand that he found existing SW
> > latching on SVE2 being wrongly advertised as hwcaps.
> > 
> > > > Fix it by restricting all SVE capabilities to ID_AA64PFR0_EL1.SVE
> > > > being non-zero.
> > > 
> > > Unfortunately, I'm not sure this fix is correct+complete.
> > > 
> > > We expose ID_AA64PFR0_EL1 and ID_AA64ZFR0_EL1 via ID register emulation,
> > > so any userspace software reading ID_AA64ZFR0_EL1 will encounter the
> > > same surprise. If we hide that I'm worried we might hide some SME-only
> > > information that isn't exposed elsewhere, and I'm not sure we can
> > > reasonably hide ID_AA64ZFR0_EL1 emulation for SME-only (more on that
> > > below).
> > 
> > I don't understand where things go wrong. EL0 SW that looks at the ID
> > registers should perform similar checks, and we are not trying to make
> > things better on that front (we can't). Unless you invent time travel
> > and fix the architecture 5 years ago... :-/
> 
> Fair enough; if we say software consuming ID_AA64ZFR0_EL1 must check
> ID_AA64PFR0_EL1.SVE or ID_AA64PFR1_EL1.SME first, and we leave the
> emulation of ID_AA64ZFR0_EL1 as-is, that's fine by me.

I think that's what the architecture forces on us, unfortunately.

> 
> > The hwcaps are effectively demultiplexing the ID registers, and they
> > have to be exact, which is what this patch provides (SVE2 doesn't get
> > wrongly advertised when not present).
> 
> > > Secondly, all our HWCAP documentation is written in the form:
> > > 
> > > | HWCAP2_SVEBF16
> > > |     Functionality implied by ID_AA64ZFR0_EL1.BF16 == 0b0001.
> > > 
> > > ... so while the architectural behaviour is a surprise, the kernel is
> > > (techincallyy) behaving exactly as documented prior to this patch. Maybe
> > > we need to change that documentation?
> > 
> > Again, I don't see what goes wrong here. BF16 is only implemented for
> > SVE or SME+FA64, and FA64 requires SVE2. So at least for that one, we
> > should be good.
> 
> That was probably a bad example. What I was trying to get at is that the
> HWCAPs are behavind exactly *as documented*, but that's not what we
> actually want them to describe. For example, SVE2 is described as:
> 
> | Functionality implied by ID_AA64ZFR0_EL1.SVEver == 0b0001.
> 
> ... which is exactly what we check today, but that doesn't
> architecturally imply FEAT_SVE2 on SME-only HW where it can apparently
> be 0b0001 due to FEAT_SME alone.
> 
> So to match the code change we'd need to change that to something like:
> 
> | Functionality impled by ID_AA64PFR0_EL1 == 0b0001 and
> | ID_AA64ZFR0_EL1.SVEver == 0b0001
> 
> ... with similar for other hwcaps.

Yeah, seems like a decent addition. I'll fold that in.

> 
> > > Do we have equivalent SME hwcaps for the relevant features?
> > >
> > > ... looking at:
> > > 
> > >   https://developer.arm.com/documentation/ddi0601/2024-12/AArch64-Registers/ID-AA64ZFR0-EL1--SVE-Feature-ID-Register-0?lang=en
> > > 
> > > ... I see that ID_AA64ZFR0_EL1.B16B16 >= 0b0010 implies the presence of
> > > SME BFMUL and BFSCALE instructions, but I don't see something equivalent
> > > in ID_AA64SMFR0_EL1 per:
> > > 
> > >   https://developer.arm.com/documentation/ddi0601/2024-12/AArch64-Registers/ID-AA64SMFR0-EL1--SME-Feature-ID-Register-0?lang=en
> > > 
> > > ... so I suspect ID_AA64ZFR0_EL1 might be the only source of truth for
> > > this.
> > 
> > Indeed, and the SME HWCAPs are not doing the right thing either. Or
> > rather, we have no way to tell userspace that BFMUL/BFSCALE are
> > available.
> 
> To be clear, I'm happy to punt on adding SME-specific HWCAPs, I just
> want to make sure we're agreed as to whether the existing HWCAPs should
> be SVE-specific, which it sounds like we are?

I think we're aligned here. I'll respin something shortly, once I've
made some progress on the state of my Inbox... :-/

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.

